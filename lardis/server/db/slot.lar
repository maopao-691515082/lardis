import sync, sync/atomic;
from .. import immut_tree, data_types;

class Slot
{
    sync.FastMutex                          w_lock;
    immut_tree.Avl<data_types.Str, Value>   kvs;

    Slot()
    {
        this.w_lock = new sync.FastMutex();
        this.kvs    = new immut_tree.Avl<data_types.Str, Value>();
    }

    void do_write_cmd(data_types.Str k, ValueWriter vw)
    {
        this.w_lock.lock();
        defer this.w_lock.unlock();

        var kvs = atomic.load(ref this.kvs);

        //todo

        atomic.store(ref this.kvs, kvs);
    }

    void do_read_cmd(data_types.Str k, ValueReader vr)
    {
        var kvs = atomic.load(ref this.kvs);

        var v = kvs.get(k, ref _);
        if (v === nil)
        {
            vr.do_read(nil);
        }
        else
        {
            vr.do_read(v.v);
        }
    }
}
